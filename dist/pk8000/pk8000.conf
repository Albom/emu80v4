ifdef HDD
  @NAME = "ПК8000 (HDD)"
else
ifdef FDC
  @NAME = "ПК8000 (НГМД)"
else
  @NAME = "ПК8000"
endif
endif

# Тактовая частота
@FREQUENCY = 2500000

# Основное ПЗУ
@ROM = "pk8000/pk8000_v12.rom"

# ПЗУ КНГМД
@FDC_ROM = "pk8000/pk8000_fdc.rom"

# ПЗУ КНГМД
@HDD_ROM = "pk8000/pk8000_hdd.rom"


######## Window ########

EmuWindow window
window.caption = @NAME

# Default window size for window.windowStyle = fixed (default = 800, 600)
#window.defaultWindowSize = 768, 512
window.defaultWindowSize = 800, 400

# Window style: autosize, sizable, fixed, fullscreen (default = autosise)
window.windowStyle = autosize
#window.windowStyle = sizable

# Window scaling option: 1x, 2x, 3x, fit, bestFit, fitKeepAR (default = bestFit)
window.frameScale = 2x
#window.frameScale = fitKeepAR
#window.frameScale = bestFit

# Window fields mixing: none, mix, interlace, scanline (default = none)
#window.fieldsMixing = mix

# Image antialiasing (default = no)
window.antialiasing = no

# Aspect correction (default = no)
#window.aspectCorrection = no
window.aspectCorrection = yes



######## Platform ########

Ram ram0 = 0x4000
Ram ram1 = 0x4000
Ram ram2 = 0x4000
Ram ram3 = 0x4000

@RAM_TAG = 1

ram0.tag = @RAM_TAG
ram1.tag = @RAM_TAG
ram2.tag = @RAM_TAG
ram3.tag = @RAM_TAG

Rom rom = @ROM, 0x4000

ifdef FDC
  Rom fdcRom = @FDC_ROM, 0x2000

  Fdc1793 fdc
  
  Pk8000FddControlRegister fddControlRegister
  fddControlRegister.fdc = &fdc

  Pk8000FdcStatusRegisters fdcStatusRegisters
  fdcStatusRegisters.fdc = &fdc

  AddrSpace ext1
  ext1.range = &fdcRom, 0x0000, 0x1FFF
  ext1.range = &fddControlRegister, 0x3FF7, 0x3FF7
  ext1.range = &fdc, 0x3FF8, 0x3FFB
  ext1.range = &fdcStatusRegisters, 0x3FFC, 0x3FFF
else
  ifdef HDD
    Rom hddRom = @HDD_ROM, 9334
    AddrSpace ext1
    ext1.range = &hddRom, 0x0000, 0x2FFF
  else
    NullSpace ext1 = 0xFF
  endif
endif

NullSpace ext2 = 0xFF


AddrSpace romRam0
romRam0.readRange  = &rom,  0x0000, 0x3FFF
romRam0.writeRange = &ram0, 0x0000, 0x3FFF

AddrSpace romRam1
romRam1.readRange  = &rom,  0x0000, 0x3FFF
romRam1.writeRange = &ram1, 0x4000, 0x7FFF

AddrSpace romRam2
romRam2.readRange  = &rom,  0x0000, 0x3FFF
romRam2.writeRange = &ram2, 0x8000, 0xBFFF

AddrSpace romRam3
romRam3.readRange  = &rom,  0x0000, 0x3FFF
romRam3.writeRange = &ram3, 0xC000, 0xFFFF

AddrSpaceMapper bank0 = 4
bank0.page = 0, &romRam0
bank0.page = 1, &ext1
bank0.page = 2, &ext2
bank0.page = 3, &ram0

AddrSpaceMapper bank1 = 4
bank1.page = 0, &romRam1
bank1.page = 1, &ext1
bank1.page = 2, &ext2
bank1.page = 3, &ram1

AddrSpaceMapper bank2 = 4
bank2.page = 0, &romRam2
bank2.page = 1, &ext1
bank2.page = 2, &ext2
bank2.page = 3, &ram2

AddrSpaceMapper bank3 = 4
bank3.page = 0, &romRam3
bank3.page = 1, &ext1
bank3.page = 2, &ext2
bank3.page = 3, &ram3

AddrSpace addrSpace
addrSpace.range = &bank0, 0x0000, 0x3FFF
addrSpace.range = &bank1, 0x4000, 0x7FFF
addrSpace.range = &bank2, 0x8000, 0xBFFF
addrSpace.range = &bank3, 0xC000, 0xFFFF

Pk8000Renderer crtRenderer
crtRenderer.screenMemoryBank = 0, &ram0
crtRenderer.screenMemoryBank = 1, &ram1
crtRenderer.screenMemoryBank = 2, &ram2
crtRenderer.screenMemoryBank = 3, &ram3

Pk8000Core core
core.window = &window
core.crtRenderer = &crtRenderer

Pk8000Keyboard keyboard

AddrSpace ioAddrSpace

Pk8000Ppi8255Circuit1 ppiCircuit1
ppiCircuit1.bank = 0, &bank0
ppiCircuit1.bank = 1, &bank1
ppiCircuit1.bank = 2, &bank2
ppiCircuit1.bank = 3, &bank3
ppiCircuit1.keyboard = &keyboard

Ppi8255 ppi1
ppi1.circuit = &ppiCircuit1

ioAddrSpace.range = &ppi1, 0x80, 0x83

Pk8000Ppi8255Circuit2 ppiCircuit2
ppiCircuit2.crtRenderer = &crtRenderer

Ppi8255 ppi2
ppi2.circuit = &ppiCircuit2

ioAddrSpace.range = &ppi2, 0x84, 0x87

ifdef HDD

  Ppi8255 hddPpi
  ioAddrSpace.range = &hddPpi, 0x50, 0x53

  PpiAtaAdapter ataAdapter
  hddPpi.circuit = &ataAdapter

  AtaDrive ataDrive
  #ataDrive.readOnly = yes
  ataDrive.imageFile = @HDD_IMAGE

  ataAdapter.ataDrive = &ataDrive
endif

Pk8000ColorSelector colorSelector
colorSelector.crtRenderer = &crtRenderer
ioAddrSpace.range = &colorSelector, 0x88, 0x88

Pk8000TxtBufSelector txtBufSelector
txtBufSelector.crtRenderer = &crtRenderer
ioAddrSpace.range = &txtBufSelector, 0x90, 0x90

Pk8000SymGenBufSelector sgBufSelector
sgBufSelector.crtRenderer = &crtRenderer
ioAddrSpace.range = &sgBufSelector, 0x91, 0x91

Pk8000GrBufSelector grBufSelector
grBufSelector.crtRenderer = &crtRenderer
ioAddrSpace.range = &grBufSelector, 0x92, 0x92

Pk8000ColBufSelector colBufSelector
colBufSelector.crtRenderer = &crtRenderer
ioAddrSpace.range = &colBufSelector, 0x93, 0x93

Pk8000InputRegister inputReg
inputReg.keyboard = &keyboard
ioAddrSpace.range = &inputReg, 0x8D, 0x8D

NullSpace inputReg2 = 0x00
ioAddrSpace.range = &inputReg2, 0x8C, 0x8C

Pk8000Mode1ColorMem colormem
colormem.crtRenderer = &crtRenderer
ioAddrSpace.range = &colormem, 0xA0, 0xBF

Psg3910 ay
ay.frequency = 1750000
ioAddrSpace.range = &ay, 0x14, 0x15

Psg3910SoundSource psgSoundSource
psgSoundSource.psg = &ay

Cpu8080 cpu
cpu.frequency = @FREQUENCY
cpu.startAddr = 0x0000
cpu.addrSpace = &addrSpace
cpu.ioAddrSpace = &ioAddrSpace
cpu.core = &core

Pk8000CpuWaits cpuWaits
crtRenderer.cpuWaits = &cpuWaits
cpu.cpuWaits = &cpuWaits

Pk8000KbdLayout kbdLayout
kbdLayout.layout = smart
#kbdLayout.numpadJoystick = yes


######## File I/O ########

TapeRedirector tapeOutFile
tapeOutFile.mode = "w"
tapeOutFile.filter = "Cas-файлы MSX (*.cas)|*.cas|Все файлы (*.*)|*"
tapeOutFile.timeout = 6000

TapeRedirector tapeInFile
tapeInFile.mode = "r"
tapeInFile.filter = "Cas-файлы MSX (*.cas)|*.cas;*.CAS|Все файлы (*.*)|*"
tapeInFile.timeout = 3000

Pk8000FileLoader loader
loader.addrSpace = &addrSpace
loader.filter = "Двоичные файлы ПК-8000 (*.cas)|*.cas;*.CAS|Все файлы (*.*)|*"
loader.tapeRedirector = &tapeInFile
loader.allowMultiblock = yes

MsxTapeOutHook tapeOutHook = 0x365E
tapeOutHook.signature = F57DD60F
tapeOutHook.tapeRedirector = &tapeOutFile
cpu.addHook = &tapeOutHook

MsxTapeOutHeaderHook tapeOutHeaderHook = 0x362B
tapeOutHeaderHook.signature = B7F5DB82
tapeOutHeaderHook.tapeRedirector = &tapeOutFile
cpu.addHook = &tapeOutHeaderHook

MsxTapeInHook tapeInHook = 0x370E
tapeInHook.signature = 3AA0FD47
tapeInHook.tapeRedirector = &tapeInFile
cpu.addHook = &tapeInHook

MsxTapeInHeaderHook tapeInHeaderHook = 0x36C1
tapeInHeaderHook.signature = F3DB82F6
tapeInHeaderHook.tapeRedirector = &tapeInFile
cpu.addHook = &tapeInHeaderHook


MsxTapeOutHook tapeOutHook2 = 0x1405
tapeOutHook2.signature = F521272A
tapeOutHook2.tapeRedirector = &tapeOutFile
cpu.addHook = &tapeOutHook2

MsxTapeOutHeaderHook tapeOutHeaderHook2 = 0x13E2
tapeOutHeaderHook2.signature = F5010000
tapeOutHeaderHook2.tapeRedirector = &tapeOutFile
cpu.addHook = &tapeOutHeaderHook2

MsxTapeInHeaderHook tapeInHeaderHook2 = 0x1468
tapeInHeaderHook2.signature = CD4B1421
tapeInHeaderHook2.tapeRedirector = &tapeInFile
cpu.addHook = &tapeInHeaderHook2

MsxTapeInHook tapeInHook2 = 0x14B8
tapeInHook2.signature = 3A5E7E57
tapeInHook2.tapeRedirector = &tapeInFile
cpu.addHook = &tapeInHook2


CloseFileHook closeFileHook = 0x2400
closeFileHook.signature = C5E5D521
closeFileHook.addTapeRedirector = &tapeInFile
closeFileHook.addTapeRedirector = &tapeOutFile
cpu.addHook = &closeFileHook

CloseFileHook closeFileHook2 = 0x0D0C
closeFileHook2.signature = E5D5C5CDB609
closeFileHook2.addTapeRedirector = &tapeInFile
closeFileHook2.addTapeRedirector = &tapeOutFile
cpu.addHook = &closeFileHook2

EmuObjectGroup tapeGrp
tapeGrp.addItem = &tapeOutHook
tapeGrp.addItem = &tapeInHook
tapeGrp.addItem = &tapeOutHeaderHook
tapeGrp.addItem = &tapeInHeaderHook
tapeGrp.addItem = &tapeOutHook2
tapeGrp.addItem = &tapeInHook2
tapeGrp.addItem = &tapeOutHeaderHook2
tapeGrp.addItem = &tapeInHeaderHook2
tapeGrp.addItem = &closeFileHook
tapeGrp.addItem = &closeFileHook2

ifdef FDC
  FdImage diskA = 80, 2, 5, 1024
  diskA.label = A
  diskA.filter = "Образы дисков ПК8000 (*.fdd)|*.fdd;*.FDD|Все файлы (*.*)|*"

  FdImage diskB = 80, 2, 5, 1024
  diskB.label = B
  diskB.filter = "Образы дисков ПК8000 (*.fdd)|*.fdd;*.FDD|Все файлы (*.*)|*"

  fdc.fdImage = 0, &diskA
  fdc.fdImage = 1, &diskB
endif


ifndef QT
  include "pk8000/pk8000_wx.inc"
endif
