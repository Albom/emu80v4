ifndef Z80
  @NAME = "Вектор-06Ц"
else
  @NAME = "Вектор-06Ц Z80"
endif

# Тактовая частота
@FREQUENCY = 3000000

# Основное ПЗУ
@ROM = "vector/loader.rom"


######## Window ########

EmuWindow window
window.caption = @NAME

# Default window size for window.windowStyle = fixed (default = 800, 600)
#window.defaultWindowSize = 768, 512
window.defaultWindowSize = 800, 600

# Window style: autosize, sizable, fixed, fullscreen (default = autosise)
window.windowStyle = autosize
#window.windowStyle = sizable

# Window scaling option: 1x, 2x, 3x, fit, bestFit, fitKeepAR (default = bestFit)
window.frameScale = 2x
#window.frameScale = fitKeepAR
#window.frameScale = bestFit

# Window fields mixing: none, mix, interlace, scanline (default = none)
#window.fieldsMixing = mix

# Image antialiasing (default = no)
window.antialiasing = yes

# Aspect correction (default = no)
#window.aspectCorrection = no
window.aspectCorrection = yes


######## Platform ########

Ram ram = 0x10000

Rom rom = @ROM, 0x8000

Ram ramDisk = 0x40000

ifndef Z80
  Cpu8080 cpu
else
  CpuZ80 cpu
endif

cpu.frequency = @FREQUENCY
cpu.startAddr = 0x0000

VectorRenderer crtRenderer
crtRenderer.memory = &ram
crtRenderer.visibleArea = yes

VectorAddrSpace addrSpace
addrSpace.ram = &ram
addrSpace.rom = &rom
addrSpace.ramDisk = &ramDisk
addrSpace.cpu = &cpu
addrSpace.crtRenderer = &crtRenderer

VectorCore core
core.window = &window
core.crtRenderer = &crtRenderer
cpu.core = &core

VectorKeyboard keyboard

AddrSpace ioAddrSpace


VectorPpi8255Circuit ppiCircuit
ppiCircuit.crtRenderer = &crtRenderer


Ppi8255 ppi
ppi.circuit = &ppiCircuit
ppiCircuit.keyboard = &keyboard

AddrSpaceInverter invertedPpi = &ppi

ioAddrSpace.range = &invertedPpi, 0x00, 0x03


Ppi8255 ppi2
AddrSpaceInverter invertedPpi2 = &ppi2
ioAddrSpace.range = &invertedPpi2, 0x04, 0x07


VectorColorRegister colorReg
colorReg.crtRenderer = &crtRenderer
ioAddrSpace.range = &colorReg, 0x0C, 0x0F


Pit8253 pit
pit.frequency = 1500000

Pit8253SoundSource sndSource
sndSource.pit = &pit

AddrSpaceInverter invertedPit = &pit
ioAddrSpace.range = &invertedPit, 0x08, 0x0B


Psg3910 ay
ay.frequency = 1750000
ioAddrSpace.range = &ay, 0x14, 0x15

Psg3910SoundSource psgSoundSource
psgSoundSource.psg = &ay


VectorRamDiskSelector ramDiskSelector
ramDiskSelector.addrSpace = &addrSpace
ioAddrSpace.range = &ramDiskSelector, 0x10, 0x10


Fdc1793 fdc
AddrSpaceInverter invertedFdc = &fdc
ioAddrSpace.range = &invertedFdc, 0x18, 0x1B


VectorFddControlRegister fddReg
fddReg.fdc = &fdc
ioAddrSpace.range = &fddReg, 0x1C, 0x1C


cpu.addrSpace = &addrSpace
cpu.ioAddrSpace = &ioAddrSpace

ifndef Z80
  VectorCpuWaits cpuWaits
else
  VectorZ80CpuWaits cpuWaits
endif

cpu.cpuWaits = &cpuWaits

VectorKbdLayout kbdLayout
kbdLayout.layout = smart




######## File I/O ########

VectorFileLoader loader
loader.addrSpace = &ram
loader.filter = "Файлы Вектора (*.rom;*.r0m;*.vec)|*.rom;*.ROM;*.rom;*.R0M;*.vec;*.VEC|Все файлы (*.*)|*"

RamDisk ramDiskIo = 1, 0x40000
ramDiskIo.filter = "Файлы RAM-диска Вектора (*.edd)|*.edd;*.EDD|Все файлы (*.*)|*"
ramDiskIo.page = 0, &ramDisk

FdImage diskA = 80, 2, 5, 1024
diskA.label = A
diskA.filter = "Образы дисков Вектора (*.fdd)|*.fdd;*.FDD|Все файлы (*.*)|*"

FdImage diskB = 80, 2, 5, 1024
diskB.label = B
diskB.filter = "Образы дисков Вектора (*.fdd)|*.fdd;*.FDD|Все файлы (*.*)|*"

fdc.fdImage = 0, &diskA
fdc.fdImage = 1, &diskB


ifdef WX
  include "vector/vector_wx.inc"
endif
